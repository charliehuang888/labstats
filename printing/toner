#!/usr/bin/env python3
import os
import os.path
import re
import sys
import tempfile
from collections import defaultdict
from concurrent.futures import ThreadPoolExecutor

from ocflib.printing.printers import PRINTERS, get_toner


TONER_FILE = '/opt/stats/var/toner'

THRESHOLDS = [
    (3000, 'LOW'),
    (1000, 'VERY LOW'),

    # it claims to have pages left, but at ~300 they become too poor quality
    (300, 'EMPTY')
]


def get_old_remainings():
    """Parse the old toner file to get the remainings."""
    if not os.path.isfile(TONER_FILE):
        return defaultdict(int)

    def parse(line):  # this is so bad
        printer = line.split(":")[0]
        match = re.search('remaining=([0-9]*) ', line)
        return printer, int(match.group(1)) if match else 0

    with open(TONER_FILE) as f:
        return {printer: remaining for printer, remaining in map(parse, f)}


if __name__ == '__main__':
    old_remainings = get_old_remainings()

    # probably overkill; atomically overwrite the file to avoid glitchiness
    tmp_fd, tmp_path = tempfile.mkstemp()
    tmp_file = os.fdopen(tmp_fd, 'w')
    os.fchmod(tmp_fd, 0o644)

    try:
        with ThreadPoolExecutor(max_workers=10) as executor:
            for name, details in zip(PRINTERS, executor.map(get_toner, PRINTERS)):
                remaining, pages_per_toner = details
                printed = pages_per_toner - remaining
                percent = int(100 * remaining / pages_per_toner)

                print("{}: printed={}, remaining={} ({}%)".format(
                      name, printed, remaining, percent), file=tmp_file)

                for threshold, warning in reversed(THRESHOLDS):
                    if remaining <= threshold and old_remainings[name] > threshold:
                        print("{} toner is {}! (~{} pages remaining)".format(name, warning, remaining))
                        break

    except IOError as ex:
        print("Exception occured: {}".format(ex), file=sys.stderr)
        print("Not updating toner stats.", file=sys.stderr)
        sys.exit(1)
    else:
        os.rename(tmp_path, TONER_FILE)
